enable_testing()
include(CTest)
find_package(MPI COMPONENTS CXX REQUIRED)
if (MPI_FOUND)
    message(STATUS "[H5Intent] found mpi at ${MPI_CXX_INCLUDE_DIRS}")
    include_directories(${MPI_CXX_INCLUDE_DIRS})
    set(DEPENDENCY_LIB ${DEPENDENCY_LIB} ${MPI_CXX_LIBRARIES})
else ()
    message(FATAL_ERROR "-- [H5Intent] mpi is needed for ${PROJECT_NAME} build")
endif ()

set(examples )
set(ranks_per_nodes_local 1 2)
set(ranks_per_nodes_lassen 1 2 32)
set(machines "local" "lassen")
set(profiles "none" "darshan")
foreach (example ${examples})
    add_executable(${example} ${example}.cpp)
    target_link_libraries(${example} ${HDF5_LIBRARIES})
    target_link_libraries(${example} ${MPI_CXX_LIBRARIES})

    foreach (machine ${machines})
        if (${machine} STREQUAL "local")
            set(ranks_per_nodes ${ranks_per_nodes_local})
        elseif (${machine} STREQUAL "lassen")
            set(ranks_per_nodes ${ranks_per_nodes_lassen})
        endif ()
        foreach (ranks_per_node ${ranks_per_nodes})
            foreach (profile ${profiles})
                if (${machine} STREQUAL "local")
                    set(mpi_exec mpirun -n ${ranks_per_node})
                    if (${profile} STREQUAL "darshan")
                        set(mpi_exec ${mpi_exec} -x LD_PRELOAD=${CMAKE_SOURCE_DIR}/dependency/.spack-env/view/lib/libdarshan.so)
                    endif()
                    if (${ranks_per_node} EQUAL 1)
                        set(mpi_exec "")
                    endif()
                elseif (${machine} STREQUAL "lassen")
                    set(mpi_exec jsrun -r 1 -a ${ranks_per_node} -c ${ranks_per_node} -d packed)
                endif ()
                set(test_name ${example}_${machine}_${ranks_per_node}_${profile}_native)
                add_test(NAME ${test_name} COMMAND
                        ${mpi_exec}
                        ${CMAKE_BINARY_DIR}/bin/${example}
                        -f $ENV{pfs}/temp/h5intent
                        -n 1000)
                add_test(NAME ${test_name}_h5intent COMMAND
                        ${mpi_exec}
                        ${CMAKE_BINARY_DIR}/bin/${example}
                        -f $ENV{pfs}/temp/h5intent
                        -n 1000)
                #set_property(TEST ${example}_h5intent APPEND PROPERTY ENVIRONMENT "LD_PRELOAD=${CMAKE_BINARY_DIR}/lib/libh5intent.so")
                set_property(TEST ${test_name}_h5intent APPEND PROPERTY ENVIRONMENT "LD_LIBRARY_PATH=$ENV{LD_LIBRARY_PATH}:${CMAKE_BINARY_DIR}/lib")
                set_property(TEST ${test_name}_h5intent APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=${CMAKE_BINARY_DIR}/lib")
                set_property(TEST ${test_name}_h5intent APPEND PROPERTY ENVIRONMENT "HDF5_VOL_CONNECTOR=intent under_vol=0:under_info={${CMAKE_SOURCE_DIR}/h5bench/property-json/native/${example}/${example}.json}")

                if (${profile} STREQUAL "darshan")
                    if (${machine} STREQUAL "local" AND ${ranks_per_node} STREQUAL "1")
                        set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT LD_PRELOAD=${CMAKE_SOURCE_DIR}/dependency/.spack-env/view/lib/libdarshan.so)
                    endif()
                    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DARSHAN_LOG_DIR_PATH=${CMAKE_SOURCE_DIR}/h5bench/darshan-logs/native/h5_write)
                endif ()
            endforeach()
        endforeach()
    endforeach()

endforeach ()

set(ranks_per_nodes 1 2 4 8 16 32 40)
function(h5bench_test test_name exec)
    foreach (ranks_per_node ${ranks_per_nodes})
        set(mpi_exec jsrun -r 1 -a ${ranks_per_node} -c ${ranks_per_node} -d packed)
        #set(mpi_exec "")
        set(test_main_name h5bench_${test_name}_${exec}_${ranks_per_node})
        add_test(NAME ${test_main_name} COMMAND
                ${mpi_exec}
                ${CMAKE_BINARY_DIR}/bin/${exec}
                ${CMAKE_CURRENT_SOURCE_DIR}/data/local/${test_name}/${exec}.cfg
                /p/gpfs1/iopp/temp/h5bench/${test_name}/test.h5)

        add_test(NAME ${test_main_name}_h5intent COMMAND
                ${mpi_exec}
                ${CMAKE_BINARY_DIR}/bin/${exec}
                ${CMAKE_CURRENT_SOURCE_DIR}/data/local/${test_name}/${exec}.cfg
                /p/gpfs1/iopp/temp/h5bench/${test_name}/test.h5)
        set_property(TEST ${test_main_name}_h5intent APPEND PROPERTY ENVIRONMENT "LD_LIBRARY_PATH=$ENV{LD_LIBRARY_PATH}:${CMAKE_BINARY_DIR}/lib")
        set_property(TEST ${test_main_name}_h5intent APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=${CMAKE_BINARY_DIR}/lib")
        set_property(TEST ${test_main_name}_h5intent APPEND PROPERTY ENVIRONMENT "HDF5_VOL_CONNECTOR=intent under_vol=0:under_info={${CMAKE_SOURCE_DIR}/h5bench/property-json/sync_1_4_libdarshan/${test_name}/${exec}.json}")
    endforeach()
endfunction()

set(folders sync_none_intent sync_libdarshan_none)
set(nodes 1 2 4 8 16 32 64 128)
foreach(node ${nodes})
foreach (folder_base ${folders})
    set(folder ${folder_base}_${node}_40)
    string(REPLACE "_" ";" folder_list ${folder})
    message("-- Processing folder " ${folder})
    list(GET folder_list 0 SYNC)
    list(GET folder_list 1 profiler)
    list(GET folder_list 2 vol)
    list(GET folder_list 3 num_nodes)
    list(GET folder_list 4 procs_per_node)
    FILE(GLOB apps "${CMAKE_SOURCE_DIR}/logs/h5bench_confs/lassen/${folder}/*.json")
    foreach(app ${apps})
        #message(${app})
        get_filename_component(app_name ${app} NAME_WE)
        set(test_name h5bench_${folder}_${app_name})
        set(exec_path ${CMAKE_BINARY_DIR}/h5bench)
        add_test(NAME ${test_name} COMMAND ${exec_path} --debug ${app})
        if("${profiler}" STREQUAL "libdarshan")
            #message("-- ${profiler}" )
            set(exec_path ${CMAKE_BINARY_DIR}/h5bench)
            set(DARSHAN_LOG_DIR ${CMAKE_SOURCE_DIR}logs/darshan/${folder}/${app_name})
            file(MAKE_DIRECTORY ${DARSHAN_LOG_DIR})
            set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "DARSHAN_LOG_DIR_PATH=${DARSHAN_LOG_DIR}")
            set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "PATH=$ENV{PATH}:${CMAKE_BINARY_DIR}/bin:${CMAKE_BINARY_DIR}:${CMAKE_BINARY_DIR}/external/h5bench")
        else()
            set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "PATH=$ENV{PATH}:${CMAKE_BINARY_DIR}/bin:${CMAKE_BINARY_DIR}")
        endif()
    endforeach()
endforeach ()
endforeach ()